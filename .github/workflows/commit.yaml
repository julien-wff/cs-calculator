name: .NET Tests

on: [ push ]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.100'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.100'

      - name: Install SonarScanner and dotCover
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global JetBrains.dotCover.GlobalTool

      - name: Run SonarScanner Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          dotnet sonarscanner begin /k:"julien-wff_cs-calculator_AYwLqk7JzV9IGMCah1nR" /d:sonar.token="${SONAR_TOKEN}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.dotCover.reportsPaths=dotcover.Output.html
          dotnet build --no-incremental
          dotnet dotcover test --dcReportType=HTML --dcOutput=dotcover.Output.html --no-build --verbosity normal
          dotnet sonarscanner end /d:sonar.login="${SONAR_TOKEN}"
